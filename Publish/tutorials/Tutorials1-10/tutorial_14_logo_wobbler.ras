program Tutorial6;
var
	time,x,y,j,i,val,dx,k:byte;
	mainChar: IncBin("charsets/tutorial13.bin","$2800");
	sinetabL : array[256] of byte;
	sinetabS : array[256] of byte;
	yshift,kk: byte = 0 ; 
	yadd : byte = 8;
	ddx: array[5] of byte;
	ddx2: array[50] of byte;

@define pos_y1 "5"
@define pos_y2 "10"
@define pos_x1 "10"
@define pos_x2 "30"

procedure RenderChunks();
begin
	moveto(40, 5, $04);
	k:=0;
	yshift:=time;
	for y:=0 to 5 do begin
		dx:=sinetabL[yshift];
		for x:=0 to 30 step 2 do begin 
			val:=x+k;
			if x<1 then val:=$20;
			if x>28 then val:=$20;
			j:=x+dx;
			screenmemory[j]:=val;
		end;
		ddx[y]:=dx;
		//yshift:=yshift+yadd;
		k:=k+40;
		incscreenx(40);
	end; 

end;


interrupt UpdateRaster();
begin
	//waitforraster(100);
	//time:=128;
	RenderChunks();
	yshift:=time;

	for i:=0 to 40 do begin
		ddx2[i]:=(sine[yshift]/8)&7;// + sine[i*4]/32;
		ddx2[i]:=ddx2[i]&7 ;

		//inc(yshift);
		//ddx2[i]:=0;
	end;

	waitforraster(98);
	SCREEN_FG_COL:=6;
	asm(";test");
	//time:=110;
	for i:=0 to 40 onpage do 
    begin
		SCREEN_FG_COL := 6;
		scrollx(ddx2[i]);
		asm(" 
// 				sty $4400
			sta $04
			sta $04
			;nop
			nop
			nop
			nop
			
");		
//		inc(yshift);
	end;
	SCREEN_FG_COL:=0;

	scrollx(0);

//	waitnoraster(8*5);	
//	waitforraster(160);

	inc(kk);
	if kk=1 then begin
		time:=time  + 3;
		kk:=0;
	end;	
	kernalinterrupt();
end;



procedure InitSine();
begin
	for i:=0 to 255 do begin
		sinetabL[i]:=sine[i]/64;
		sinetabS[i]:=(sine[i]/8)&7;
	end;
	sinetabL[255] := sine[255]/64;
	sinetabS[255] := (sine[255]/8)&7;

end;


begin
	InitSine();
	setmulticolormode();
	//setbitmapmode();
	//poke(VIC_DATA_LOC, 0,$18);
	setbank(VIC_BANK0);
	poke(VIC_DATA_LOC, 0, $1A);
	poke(MULTICOLOR_CHAR_COL, 0, BLACK);
	poke(MULTICOLOR_CHAR_COL, 1, GREY);
	poke(MULTICOLOR_CHAR_COL, 2, YELLOW);

	//copyimagecolordata(image_color,0);
	clearscreen($21,$0400);
	clearscreen(11,$D800);
	SCREEN_BG_COL:=BLACK;

	DisableCIAInterrupts();
	RasterIRQ(UpdateRaster(), 1);
	EnableInterrupts();


	//Loop();

end.
